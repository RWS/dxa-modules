// Dynamic Documentation GUI build pipeline
pipeline {

    agent {
        label 'dxadocker'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
    }

    parameters {
        string name: "tempFolder", defaultValue: "C:\\Temp\\DXA\\DDGUIBoilerplate", description: 'Temporary folder'
        string name: "packageName", defaultValue: 'Sdl.Dxa.Modules.DynamicDocumentation.Boilerplate', description: 'Name of the package we are going to publish'
        string name: "version", defaultValue: '2.2.11', description: 'Version of the package we are going to publish'
        booleanParam name: "isPreRelease", defaultValue: true, description: "If we add 'beta' prefix to the version"
        string name: "nuGetApiKey", defaultValue: '4e428671-39c7-3bcf-a955-a0a1af81fed8', description: "API Key is needed for authentication"
        string name: "nexusSource", defaultValue: 'https://nexus.sdl.com/service/local/nuget/releases_dotnet/', description: "Nuget source where you are going to publish"
    }

    stages {
        stage('Building DD GUI Boilerplate') {
            when { not {
                branch 'develop'
            } }
            steps {
                dir("boilerplate") {
                    powershell 'mvn -B clean package'
                }
            }
        }

        stage('Building and publishing DD GUI Boilerplate') {
            when {
                branch 'develop'
            }
            steps {
                dir("boilerplate") {
                    powershell 'mvn -s ./settings.xml clean deploy'
                }
            }
        }

        stage('Publishing Dynamic Documentation Module GUI Boilerplate NuGet Package') {
            when {
                branch 'develop'
            }
            steps {
                dir("boilerplate/nuget") {
                    powershell ".\\publish.ps1 -guiSourcePath '..\\' -tempFolder ${tempFolder} -Actions @('Prepare', 'Push') -nuGetApiKey ${nuGetApiKey} -nexusSource ${nexusSource} -packageName ${packageName} -version ${version} -isPreRelease ('${isPreRelease}' -eq 'true')"
                }
            }
        }
    }

    post {
        always {
            dir("boilerplate") {
                archiveArtifacts artifacts: 'target/**', fingerprint: true
            }
        }
    }
}

